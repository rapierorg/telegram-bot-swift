// Telegram Bot SDK for Swift (unofficial).
// This file is autogenerated by API/generate_wrappers.rb script.

import Foundation
import Dispatch

public extension TelegramBot {
    typealias GetUserProfilePhotosCompletion = (_ result: UserProfilePhotos?, _ error: DataTaskError?) -> ()

    /// Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.
    /// - Parameters:
    ///     - user_id: Unique identifier of the target user
    ///     - offset: Sequential number of the first photo to be returned. By default, all photos are returned.
    ///     - limit: Limits the number of photos to be retrieved. Values between 1—100 are accepted. Defaults to 100.
    /// - Returns: UserProfilePhotos on success. Nil on error, in which case `TelegramBot.lastError` contains the details.
    /// - Note: Blocking version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#getuserprofilephotos>
    @discardableResult
    public func getUserProfilePhotosSync(
            user_id: Int64,
            offset: Int? = nil,
            limit: Int? = nil,
            _ parameters: [String: Any?] = [:]) -> UserProfilePhotos? {
        return requestSync("getUserProfilePhotos", defaultParameters["getUserProfilePhotos"], parameters, [
            "user_id": user_id,
            "offset": offset,
            "limit": limit])
    }

    /// Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.
    /// - Parameters:
    ///     - user_id: Unique identifier of the target user
    ///     - offset: Sequential number of the first photo to be returned. By default, all photos are returned.
    ///     - limit: Limits the number of photos to be retrieved. Values between 1—100 are accepted. Defaults to 100.
    /// - Returns: UserProfilePhotos on success. Nil on error, in which case `error` contains the details.
    /// - Note: Asynchronous version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#getuserprofilephotos>
    public func getUserProfilePhotosAsync(
            user_id: Int64,
            offset: Int? = nil,
            limit: Int? = nil,
            _ parameters: [String: Any?] = [:],
            queue: DispatchQueue = .main,
            completion: GetUserProfilePhotosCompletion? = nil) {
        return requestAsync("getUserProfilePhotos", defaultParameters["getUserProfilePhotos"], parameters, [
            "user_id": user_id,
            "offset": offset,
            "limit": limit],
            queue: queue, completion: completion)
    }
}

