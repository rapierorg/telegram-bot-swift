// Telegram Bot SDK for Swift (unofficial).
// This file is autogenerated by API/generate_wrappers.rb script.

import Foundation
import Dispatch

public extension TelegramBot {
    typealias KickChatMemberCompletion = (_ result: Bool?, _ error: DataTaskError?) -> ()

    /// Use this method to kick a user from a group or a supergroup. In the case of supergroups, the user will not be able to return to the group on their own using invite links, etc., unless unbanned first. The bot must be an administrator in the group for this to work. Returns True on success.
    /// Note: This will method only work if the ‘All Members Are Admins’ setting is off in the target group. Otherwise members may only be removed by the group's creator or by the member that added them.
    /// - Parameters:
    ///     - chat_id: Unique identifier for the target group or username of the target supergroup (in the format @supergroupusername)
    ///     - user_id: Unique identifier of the target user
    /// - Returns: Bool on success. Nil on error, in which case `TelegramBot.lastError` contains the details.
    /// - Note: Blocking version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#kickchatmember>
    @discardableResult
    public func kickChatMemberSync(
            chat_id: ChatId,
            user_id: Int64,
            _ parameters: [String: Any?] = [:]) -> Bool? {
        return requestSync("kickChatMember", defaultParameters["kickChatMember"], parameters, [
            "chat_id": chat_id,
            "user_id": user_id])
    }

    /// Use this method to kick a user from a group or a supergroup. In the case of supergroups, the user will not be able to return to the group on their own using invite links, etc., unless unbanned first. The bot must be an administrator in the group for this to work. Returns True on success.
    /// Note: This will method only work if the ‘All Members Are Admins’ setting is off in the target group. Otherwise members may only be removed by the group's creator or by the member that added them.
    /// - Parameters:
    ///     - chat_id: Unique identifier for the target group or username of the target supergroup (in the format @supergroupusername)
    ///     - user_id: Unique identifier of the target user
    /// - Returns: Bool on success. Nil on error, in which case `error` contains the details.
    /// - Note: Asynchronous version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#kickchatmember>
    public func kickChatMemberAsync(
            chat_id: ChatId,
            user_id: Int64,
            _ parameters: [String: Any?] = [:],
            queue: DispatchQueue = .main,
            completion: KickChatMemberCompletion? = nil) {
        return requestAsync("kickChatMember", defaultParameters["kickChatMember"], parameters, [
            "chat_id": chat_id,
            "user_id": user_id],
            queue: queue, completion: completion)
    }
}

