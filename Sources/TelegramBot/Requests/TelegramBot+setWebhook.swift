// Telegram Bot SDK for Swift (unofficial).
// This file is autogenerated by API/generate_wrappers.rb script.

import Foundation
import Dispatch

public extension TelegramBot {
    typealias SetWebhookCompletion = (_ result: Bool?, _ error: DataTaskError?) -> ()

    /// Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized Update. In case of an unsuccessful request, we will give up after a reasonable amount of attempts.
    /// If you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. https://www.example.com/<token>. Since nobody else knows your bot‘s token, you can be pretty sure it’s us.
    /// - Parameters:
    ///     - url: HTTPS url to send updates to. Use an empty string to remove webhook integration
    ///     - certificate: Upload your public key certificate so that the root certificate in use can be checked. See our self-signed guide for details.
    /// - Returns: Bool on success. Nil on error, in which case `TelegramBot.lastError` contains the details.
    /// - Note: Blocking version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#setwebhook>
    @discardableResult
    public func setWebhookSync(
            url: String? = nil,
            certificate: InputFile? = nil,
            _ parameters: [String: Any?] = [:]) -> Bool? {
        return requestSync("setWebhook", defaultParameters["setWebhook"], parameters, [
            "url": url,
            "certificate": certificate])
    }

    /// Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized Update. In case of an unsuccessful request, we will give up after a reasonable amount of attempts.
    /// If you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. https://www.example.com/<token>. Since nobody else knows your bot‘s token, you can be pretty sure it’s us.
    /// - Parameters:
    ///     - url: HTTPS url to send updates to. Use an empty string to remove webhook integration
    ///     - certificate: Upload your public key certificate so that the root certificate in use can be checked. See our self-signed guide for details.
    /// - Returns: Bool on success. Nil on error, in which case `error` contains the details.
    /// - Note: Asynchronous version of the method.
    ///
    /// - SeeAlso: <https://core.telegram.org/bots/api#setwebhook>
    public func setWebhookAsync(
            url: String? = nil,
            certificate: InputFile? = nil,
            _ parameters: [String: Any?] = [:],
            queue: DispatchQueue = .main,
            completion: SetWebhookCompletion? = nil) {
        return requestAsync("setWebhook", defaultParameters["setWebhook"], parameters, [
            "url": url,
            "certificate": certificate],
            queue: queue, completion: completion)
    }
}

